{"ast":null,"code":"import _objectSpread from \"/home/spiced/spiced/spiced-final-project/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/spiced/spiced/spiced-final-project/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/spiced/spiced/spiced-final-project/src/contexts/SamplerContext.js\";\nimport React, { useReducer } from 'react';\nimport updateEditorReducer from '../reducers/samplerReducer';\nimport INITIAL_STATE from './Config/AudioInitialState';\nexport var Context = React.createContext();\nexport function SamplerContextStore(props) {\n  var _useReducer = useReducer(updateEditorReducer, INITIAL_STATE),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  return React.createElement(Context.Provider, {\n    value: _objectSpread({}, state, {\n      dispatch: dispatch\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, props.children);\n}","map":{"version":3,"sources":["/home/spiced/spiced/spiced-final-project/src/contexts/SamplerContext.js"],"names":["React","useReducer","updateEditorReducer","INITIAL_STATE","Context","createContext","SamplerContextStore","props","state","dispatch","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,mBAAP,MAAgC,4BAAhC;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AAEA,OAAO,IAAMC,OAAO,GAAGJ,KAAK,CAACK,aAAN,EAAhB;AAEP,OAAO,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA,oBACbN,UAAU,CAACC,mBAAD,EAAsBC,aAAtB,CADG;AAAA;AAAA,MAChCK,KADgC;AAAA,MACzBC,QADyB;;AAEvC,SAAO,oBAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,oBACvBD,KADuB;AAE1BC,MAAAA,QAAQ,EAARA;AAF0B,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGHF,KAAK,CAACG,QAHH,CAAP;AAKH","sourcesContent":["import React, {useReducer} from 'react';\nimport updateEditorReducer from '../reducers/samplerReducer';\nimport INITIAL_STATE from './Config/AudioInitialState';\n\nexport const Context = React.createContext();\n\nexport function SamplerContextStore(props) {\n    const [state, dispatch] = useReducer(updateEditorReducer, INITIAL_STATE)\n    return <Context.Provider value={{\n        ...state,\n        dispatch,\n    }}>{props.children}\n    </Context.Provider>\n}"]},"metadata":{},"sourceType":"module"}