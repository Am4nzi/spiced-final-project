{"ast":null,"code":"var _jsxFileName = \"/home/spiced/spiced/sampler2/Sampler/src/components/Pad/Pad.js\";\nimport React, { useContext } from \"react\";\nimport { Context } from \"../../contexts/SamplerContext\";\nimport { handlePadTrigger } from \"../../actions\";\nimport Colors from \"../../Config/ColorScheme\";\nimport touchCTRL from \"../../Config/touchControls\";\nimport \"./Pad.css\";\nexport default (function (props) {\n  var context = useContext(Context);\n  var currentPad = context.gridPadsArr[props.id];\n  var borderColor = currentPad.source ? currentPad.color : Colors.gray;\n  var color = props.id === context.selectedPad ? currentPad.color : Colors.black;\n\n  var handleTouchStart = function handleTouchStart(padId) {\n    if (!touchCTRL[padId].hold) {\n      touchCTRL[padId].hold = true;\n      handlePadTrigger(context, padId);\n    }\n  };\n\n  var handleTouchEnd = function handleTouchEnd(padId) {\n    touchCTRL[padId].hold = false;\n  };\n\n  var handleMouseClick = function handleMouseClick(padId) {\n    if (!context.touchEnabled) {\n      handlePadTrigger(context, padId);\n    }\n  };\n\n  return;\n  React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"pad-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"pad\",\n    id: props.id,\n    style: {\n      backgroundColor: color,\n      color: Colors.white,\n      transition: \"0.5s linear\"\n    },\n    onClick: function onClick() {\n      handleMouseClick(props.id);\n    },\n    onDoubleClick: function onDoubleClick(e) {\n      return e.preventDefault();\n    },\n    onTouchStart: function onTouchStart(e) {\n      handleTouchStart(props.id, e);\n    },\n    onTouchEnd: function onTouchEnd(e) {\n      handleTouchEnd(props.id, e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"pad-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, props.midiNote))));\n});","map":{"version":3,"sources":["/home/spiced/spiced/sampler2/Sampler/src/components/Pad/Pad.js"],"names":["React","useContext","Context","handlePadTrigger","Colors","touchCTRL","props","context","currentPad","gridPadsArr","id","borderColor","source","color","gray","selectedPad","black","handleTouchStart","padId","hold","handleTouchEnd","handleMouseClick","touchEnabled","backgroundColor","white","transition","e","preventDefault","midiNote"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,OAAT,QAAwB,+BAAxB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAO,WAAP;AAEA,gBAAe,UAAAC,KAAK,EAAI;AACtB,MAAMC,OAAO,GAAGN,UAAU,CAACC,OAAD,CAA1B;AACA,MAAIM,UAAU,GAAGD,OAAO,CAACE,WAAR,CAAoBH,KAAK,CAACI,EAA1B,CAAjB;AACA,MAAIC,WAAW,GAAGH,UAAU,CAACI,MAAX,GAAoBJ,UAAU,CAACK,KAA/B,GAAuCT,MAAM,CAACU,IAAhE;AACA,MAAID,KAAK,GACPP,KAAK,CAACI,EAAN,KAAaH,OAAO,CAACQ,WAArB,GAAmCP,UAAU,CAACK,KAA9C,GAAsDT,MAAM,CAACY,KAD/D;;AAEA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,KAAK,EAAI;AAChC,QAAI,CAACb,SAAS,CAACa,KAAD,CAAT,CAAiBC,IAAtB,EAA4B;AAC1Bd,MAAAA,SAAS,CAACa,KAAD,CAAT,CAAiBC,IAAjB,GAAwB,IAAxB;AACAhB,MAAAA,gBAAgB,CAACI,OAAD,EAAUW,KAAV,CAAhB;AACD;AACF,GALD;;AAMA,MAAME,cAAc,GAAG,SAAjBA,cAAiB,CAAAF,KAAK,EAAI;AAC9Bb,IAAAA,SAAS,CAACa,KAAD,CAAT,CAAiBC,IAAjB,GAAwB,KAAxB;AACD,GAFD;;AAGA,MAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAH,KAAK,EAAI;AAChC,QAAI,CAACX,OAAO,CAACe,YAAb,EAA2B;AACzBnB,MAAAA,gBAAgB,CAACI,OAAD,EAAUW,KAAV,CAAhB;AACD;AACF,GAJD;;AAKA;AACA,sBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,KADZ;AAEE,IAAA,EAAE,EAAEZ,KAAK,CAACI,EAFZ;AAGE,IAAA,KAAK,EAAE;AACLa,MAAAA,eAAe,EAAEV,KADZ;AAELA,MAAAA,KAAK,EAAET,MAAM,CAACoB,KAFT;AAGLC,MAAAA,UAAU,EAAE;AAHP,KAHT;AAQE,IAAA,OAAO,EAAE,mBAAM;AACbJ,MAAAA,gBAAgB,CAACf,KAAK,CAACI,EAAP,CAAhB;AACD,KAVH;AAWE,IAAA,aAAa,EAAE,uBAAAgB,CAAC;AAAA,aAAIA,CAAC,CAACC,cAAF,EAAJ;AAAA,KAXlB;AAYE,IAAA,YAAY,EAAE,sBAAAD,CAAC,EAAI;AACjBT,MAAAA,gBAAgB,CAACX,KAAK,CAACI,EAAP,EAAWgB,CAAX,CAAhB;AACD,KAdH;AAeE,IAAA,UAAU,EAAE,oBAAAA,CAAC,EAAI;AACfN,MAAAA,cAAc,CAACd,KAAK,CAACI,EAAP,EAAWgB,CAAX,CAAd;AACD,KAjBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAmBE;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BpB,KAAK,CAACsB,QAAlC,CAnBF,CADF,CADF;AAyBD,CA9CD","sourcesContent":["import React, { useContext } from \"react\";\nimport { Context } from \"../../contexts/SamplerContext\";\nimport { handlePadTrigger } from \"../../actions\";\nimport Colors from \"../../Config/ColorScheme\";\nimport touchCTRL from \"../../Config/touchControls\";\nimport \"./Pad.css\";\n\nexport default props => {\n  const context = useContext(Context);\n  let currentPad = context.gridPadsArr[props.id];\n  let borderColor = currentPad.source ? currentPad.color : Colors.gray;\n  let color =\n    props.id === context.selectedPad ? currentPad.color : Colors.black;\n  const handleTouchStart = padId => {\n    if (!touchCTRL[padId].hold) {\n      touchCTRL[padId].hold = true;\n      handlePadTrigger(context, padId);\n    }\n  };\n  const handleTouchEnd = padId => {\n    touchCTRL[padId].hold = false;\n  };\n  const handleMouseClick = padId => {\n    if (!context.touchEnabled) {\n      handlePadTrigger(context, padId);\n    }\n  };\n  return\n  <React.Fragment>\n    <div className=\"pad-wrapper\">\n      <div\n        className=\"pad\"\n        id={props.id}\n        style={{\n          backgroundColor: color,\n          color: Colors.white,\n          transition: \"0.5s linear\"\n        }}\n        onClick={() => {\n          handleMouseClick(props.id);\n        }}\n        onDoubleClick={e => e.preventDefault()}\n        onTouchStart={e => {\n          handleTouchStart(props.id, e);\n        }}\n        onTouchEnd={e => {\n          handleTouchEnd(props.id, e);\n        }}\n      >\n        <span className=\"pad-text\">{props.midiNote}</span>\n      </div>\n    </div>\n  </React.Fragment>;\n};\n"]},"metadata":{},"sourceType":"module"}