{"ast":null,"code":"var _jsxFileName = \"/home/spiced/spiced/spiced-final-project/src/components/StartScreen/StartScreen.js\";\nimport React, { useContext } from 'react';\nimport { Context } from '../../contexts/SamplerContext';\nimport { setCTX } from '../../actions';\nimport './StartScreen.css';\nimport Colors from '../../Config/ColorScheme';\nimport WorkerNotify from '../WorkerNotify/WorkerNotify';\nexport default (function () {\n  var context = useContext(Context);\n\n  var displayContent = function displayContent() {\n    if (!window.AudioContext) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"start-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"Sorry, Your browser doesn't support Web Audio :(\")));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: function onClick() {\n        setCTX(context);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"START\"));\n  };\n\n  var renderInstallButton = function renderInstallButton() {\n    if (!window.matchMedia('(\"display-mode: standalone\")').matches) {\n      return React.createElement(WorkerNotify, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      });\n    }\n\n    return null;\n  };\n\n  return React.createElement(\"div\", {\n    className: \"start-wrapper\",\n    style: {\n      backgroundColor: Colors.blue,\n      color: Colors.black\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"content-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      backgroundColor: Colors.white,\n      padding: \"1vh 2vw\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"REACT SAMPLER \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), \" with Web Audio API\"), renderInstallButton(), displayContent(), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"start-links\",\n    href: \"https://github.com/CannonFodderr/Sampler\",\n    target: \"__blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Fork me on GitHub\"), \" Made with \", React.createElement(\"span\", {\n    style: {\n      color: Colors.red,\n      fontSize: \"1.3rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"\\u2665\"), \" by \", React.createElement(\"a\", {\n    className: \"start-links\",\n    href: \"https://idanprofile.herokuapp.com/profile/1/projects\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Idan Izhaki\"))))));\n});","map":{"version":3,"sources":["/home/spiced/spiced/spiced-final-project/src/components/StartScreen/StartScreen.js"],"names":["React","useContext","Context","setCTX","Colors","WorkerNotify","context","displayContent","window","AudioContext","renderInstallButton","matchMedia","matches","backgroundColor","blue","color","black","white","padding","red","fontSize"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,OAAR,QAAsB,+BAAtB;AACA,SAAQC,MAAR,QAAqB,eAArB;AACA,OAAO,mBAAP;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AAEA,gBAAe,YAAM;AACjB,MAAMC,OAAO,GAAGL,UAAU,CAACC,OAAD,CAA1B;;AACA,MAAMK,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,QAAG,CAACC,MAAM,CAACC,YAAX,EAAwB;AACpB,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DADA,CADJ,CADJ;AAOH;;AACD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AACA,MAAA,SAAS,EAAC,KADV;AAEA,MAAA,OAAO,EAAE,mBAAM;AAAEN,QAAAA,MAAM,CAACG,OAAD,CAAN;AAAgB,OAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,CADJ;AASH,GAnBD;;AAoBA,MAAMI,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAC9B,QAAG,CAACF,MAAM,CAACG,UAAP,CAAkB,8BAAlB,EAAkDC,OAAtD,EAA8D;AAC1D,aAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AACD,WAAO,IAAP;AACH,GALD;;AAMA,SACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,IAAA,KAAK,EAAE;AAACC,MAAAA,eAAe,EAAET,MAAM,CAACU,IAAzB;AAA+BC,MAAAA,KAAK,EAAEX,MAAM,CAACY;AAA7C,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAE;AAACH,MAAAA,eAAe,EAAET,MAAM,CAACa,KAAzB;AAAgCC,MAAAA,OAAO,EAAE;AAAzC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,wBADA,EAECR,mBAAmB,EAFpB,EAGCH,cAAc,EAHf,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACA,IAAA,SAAS,EAAC,aADV;AAEA,IAAA,IAAI,EAAC,0CAFL;AAEgD,IAAA,MAAM,EAAC,SAFvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,iBAGqG;AAAM,IAAA,KAAK,EAAE;AAACQ,MAAAA,KAAK,EAAEX,MAAM,CAACe,GAAf;AAAoBC,MAAAA,QAAQ,EAAE;AAA9B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHrG,UAGuK;AAAG,IAAA,SAAS,EAAC,aAAb;AAA2B,IAAA,IAAI,EAAC,sDAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHvK,CADJ,CAJA,CADJ,CADA,CADJ;AAkBH,CA9CD","sourcesContent":["import React, {useContext} from 'react';\nimport {Context} from '../../contexts/SamplerContext';\nimport {setCTX} from '../../actions'\nimport './StartScreen.css';\nimport Colors from '../../Config/ColorScheme';\nimport WorkerNotify from '../WorkerNotify/WorkerNotify'\n\nexport default () => {\n    const context = useContext(Context);\n    const displayContent = () => {\n        if(!window.AudioContext){\n            return (\n                <div>\n                    <div className=\"start-info\">\n                    <p>Sorry, Your browser doesn't support Web Audio :(</p>\n                    </div>\n                </div>\n            )\n        }\n        return(\n            <div>\n    \n                <button\n                className=\"btn\"\n                onClick={() => { setCTX(context)}}\n                >START</button>\n            </div>\n        )\n    }\n    const renderInstallButton = () => {\n        if(!window.matchMedia('(\"display-mode: standalone\")').matches){\n            return <WorkerNotify />\n        }\n        return null\n    }\n    return (\n        <div className=\"start-wrapper\" style={{backgroundColor: Colors.blue, color: Colors.black}}>\n        <div className=\"content-container\">\n            <div style={{backgroundColor: Colors.white, padding: \"1vh 2vw\"}}>\n            <h1>REACT SAMPLER <br/> with Web Audio API</h1>\n            {renderInstallButton()}\n            {displayContent()}\n            <div>\n                <h4>\n                    <a\n                    className=\"start-links\"\n                    href=\"https://github.com/CannonFodderr/Sampler\" target=\"__blank\">Fork me on GitHub</a> Made with <span style={{color: Colors.red, fontSize: \"1.3rem\"}}>â™¥</span> by <a className=\"start-links\" href=\"https://idanprofile.herokuapp.com/profile/1/projects\">Idan Izhaki</a>\n                </h4>\n            </div>\n            </div>\n        </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}