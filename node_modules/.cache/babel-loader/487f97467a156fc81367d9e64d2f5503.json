{"ast":null,"code":"import _slicedToArray from \"/home/spiced/spiced/sampler2/Sampler/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/spiced/spiced/sampler2/Sampler/src/components/WorkerNotify/WorkerNotify.js\";\nimport React, { useState, useEffect } from 'react';\n\nvar WorkerNotify = function WorkerNotify() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      prompt = _useState2[0],\n      setPrompt = _useState2[1];\n\n  useEffect(function () {\n    if ('serviceWorker' in navigator) {\n      window.addEventListener('beforeinstallprompt', function (e) {\n        e.preventDefault();\n        setPrompt(e);\n      });\n    }\n  }, []);\n\n  var installClickHandler = function installClickHandler() {\n    prompt.prompt();\n    prompt.userChoice.then(function (res) {\n      if (res.outcome === \"accepted\") {\n        setPrompt(null);\n      }\n    });\n  };\n\n  var renderInstallButton = function renderInstallButton() {\n    if (prompt) {\n      return React.createElement(\"button\", {\n        className: \"btn\",\n        onClick: installClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"USE AS APP\");\n    }\n\n    return null;\n  };\n\n  return React.createElement(React.Fragment, null, renderInstallButton());\n};\n\nexport default WorkerNotify;","map":{"version":3,"sources":["/home/spiced/spiced/sampler2/Sampler/src/components/WorkerNotify/WorkerNotify.js"],"names":["React","useState","useEffect","WorkerNotify","prompt","setPrompt","navigator","window","addEventListener","e","preventDefault","installClickHandler","userChoice","then","res","outcome","renderInstallButton"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA,kBACKF,QAAQ,CAAC,IAAD,CADb;AAAA;AAAA,MAChBG,MADgB;AAAA,MACRC,SADQ;;AAEvBH,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAG,mBAAmBI,SAAtB,EAAgC;AAC5BC,MAAAA,MAAM,CAACC,gBAAP,CAAwB,qBAAxB,EAA+C,UAAAC,CAAC,EAAI;AAChDA,QAAAA,CAAC,CAACC,cAAF;AACAL,QAAAA,SAAS,CAACI,CAAD,CAAT;AACH,OAHD;AAIH;AACJ,GAPQ,EAON,EAPM,CAAT;;AAQA,MAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAC9BP,IAAAA,MAAM,CAACA,MAAP;AACAA,IAAAA,MAAM,CAACQ,UAAP,CAAkBC,IAAlB,CAAuB,UAAAC,GAAG,EAAI;AAC1B,UAAGA,GAAG,CAACC,OAAJ,KAAgB,UAAnB,EAA8B;AAC1BV,QAAAA,SAAS,CAAC,IAAD,CAAT;AACH;AACJ,KAJD;AAKH,GAPD;;AAQA,MAAMW,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAC9B,QAAGZ,MAAH,EAAU;AACN,aAAO;AACP,QAAA,SAAS,EAAC,KADH;AAEP,QAAA,OAAO,EAAEO,mBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AAIH;;AACD,WAAO,IAAP;AACH,GARD;;AASA,SACI,0CACKK,mBAAmB,EADxB,CADJ;AAKH,CAhCD;;AAkCA,eAAeb,YAAf","sourcesContent":["import React , {useState, useEffect} from 'react'\n\nconst WorkerNotify = () => {\n    const [prompt, setPrompt] = useState(null)\n    useEffect(() => {\n        if('serviceWorker' in navigator){\n            window.addEventListener('beforeinstallprompt', e => {\n                e.preventDefault()\n                setPrompt(e)\n            })\n        }\n    }, [])\n    const installClickHandler = () => {\n        prompt.prompt()\n        prompt.userChoice.then(res => {\n            if(res.outcome === \"accepted\"){\n                setPrompt(null)\n            }\n        })\n    }\n    const renderInstallButton = () => {\n        if(prompt){\n            return <button \n            className=\"btn\"\n            onClick={installClickHandler}\n            >USE AS APP</button>\n        }\n        return null\n    }\n    return(\n        <>\n            {renderInstallButton()}\n        </>\n    )\n}\n\nexport default WorkerNotify"]},"metadata":{},"sourceType":"module"}