{"ast":null,"code":"var _jsxFileName = \"/home/spiced/spiced/spiced-final-project/src/components/Pad/Pad.js\";\nimport React, { useContext } from 'react';\nimport SamplerGrid from \"../SamplerGrid/SamplerGrid\";\nimport EditorItemRange from '../PadEditorItem/EditorItemRange';\nimport { Context } from '../../contexts/SamplerContext';\nimport { handlePadTrigger } from '../../actions';\nimport Colors from '../../Config/ColorScheme';\nimport touchCTRL from '../../Config/touchControls';\nimport './Pad.css';\nimport { setCTX } from \"../../actions\";\nexport default (function (props) {\n  var context = useContext(Context);\n  var currentPad = context.gridPadsArr[props.id];\n  var selectedPad = context.gridPadsArr[context.selectedPad];\n  var max = 0;\n  var source = context.gridPadsArr[context.selectedPad].source;\n  var borderColor = currentPad.source ? currentPad.color : Colors.gray;\n  var color = props.id === context.selectedPad ? currentPad.color : Colors.black;\n\n  var handleTouchStart = function handleTouchStart(padId) {\n    if (!touchCTRL[padId].hold) {\n      touchCTRL[padId].hold = true;\n      handlePadTrigger(context, padId);\n    }\n  };\n\n  var handleTouchEnd = function handleTouchEnd(padId) {\n    touchCTRL[padId].hold = false;\n  };\n\n  var handleMouseClick = function handleMouseClick(padId) {\n    if (!context.touchEnabled) {\n      handlePadTrigger(context, padId);\n    }\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"pad\",\n    id: props.id,\n    style: {\n      backgroundColor: color,\n      color: Colors.white,\n      transition: \"0.25s linear\"\n    },\n    onClick: function onClick() {\n      handleMouseClick(props.id);\n    },\n    onDoubleClick: function onDoubleClick(e) {\n      return e.preventDefault();\n    },\n    onTouchStart: function onTouchStart(e) {\n      handleTouchStart(props.id, e);\n    },\n    onTouchEnd: function onTouchEnd(e) {\n      handleTouchEnd(props.id, e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"pad-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, props.midiNote)));\n});","map":{"version":3,"sources":["/home/spiced/spiced/spiced-final-project/src/components/Pad/Pad.js"],"names":["React","useContext","SamplerGrid","EditorItemRange","Context","handlePadTrigger","Colors","touchCTRL","setCTX","props","context","currentPad","gridPadsArr","id","selectedPad","max","source","borderColor","color","gray","black","handleTouchStart","padId","hold","handleTouchEnd","handleMouseClick","touchEnabled","backgroundColor","white","transition","e","preventDefault","midiNote"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react';\nimport SamplerGrid from \"../SamplerGrid/SamplerGrid\";\nimport EditorItemRange from '../PadEditorItem/EditorItemRange';\nimport {Context} from '../../contexts/SamplerContext';\nimport {handlePadTrigger} from '../../actions'\nimport Colors from '../../Config/ColorScheme';\nimport touchCTRL from '../../Config/touchControls';\nimport './Pad.css';\nimport { setCTX } from \"../../actions\";\n\nexport default (props) => {\n    const context = useContext(Context);\n    let currentPad = context.gridPadsArr[props.id]\n    let selectedPad = context.gridPadsArr[context.selectedPad];\n    let max = 0;\n    let source = context.gridPadsArr[context.selectedPad].source;\n    let borderColor = currentPad.source ? currentPad.color : Colors.gray;\n    let color = props.id === context.selectedPad ? currentPad.color : Colors.black;\n    const handleTouchStart = (padId) => {\n        if(!touchCTRL[padId].hold){\n            touchCTRL[padId].hold = true;\n            handlePadTrigger(context, padId);\n        }\n    }\n    const handleTouchEnd = (padId) => {\n        touchCTRL[padId].hold = false;\n    }\n    const handleMouseClick = (padId) => {\n        if(!context.touchEnabled){\n            handlePadTrigger(context, padId)\n        }\n    }\n    return (\n      <React.Fragment>\n\n    <div\n    className=\"pad\"\n    id={props.id}\n    style={{\n        backgroundColor: color,\n        color: Colors.white,\n        transition: \"0.25s linear\",\n    }}\n    onClick={() => {handleMouseClick(props.id)}}\n    onDoubleClick={(e) => e.preventDefault()}\n    onTouchStart={(e) => {handleTouchStart(props.id, e)}}\n    onTouchEnd={(e) => {handleTouchEnd(props.id, e)}}\n    >\n    <span className=\"pad-text\">{props.midiNote}</span>\n    </div>\n\n\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}