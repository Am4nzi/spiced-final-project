{"ast":null,"code":"var _jsxFileName = \"/home/spiced/spiced/spiced-final-project/src/components/WaveformDisplay/WaveformDisplay.js\";\nimport React, { useContext, useRef, useEffect } from 'react';\nimport { Context } from '../../contexts/SamplerContext';\nimport Colors from '../../Config/ColorScheme';\nexport default (function () {\n  var context = useContext(Context);\n  var canvasRef = useRef(null);\n\n  var draw = function draw() {\n    var canvas = canvasRef.current;\n    var c = canvas.getContext('2d');\n    c.clearRect(0, 0, canvas.width, canvas.height);\n    var sourceAvailable = context.sources[context.selectedPad];\n    if (!sourceAvailable || !sourceAvailable.waveformData) return;\n    var data = sourceAvailable.waveformData;\n    var step = Math.ceil(data.length / canvas.width);\n    var amp = canvas.height / 2;\n    c.fillStyle = Colors.white;\n\n    for (var i = 0; i < canvas.width; i++) {\n      var min = 1.0;\n      var max = -1.0;\n\n      for (var j = 0; j < step; j++) {\n        var datum = data[i * step + j];\n        if (datum < min) min = datum;\n        if (datum > max) max = datum;\n      }\n\n      c.fillRect(i, (1 + min) * amp, 1, Math.max(1, (max - min) * amp));\n    }\n  };\n\n  useEffect(function () {\n    draw();\n  });\n  var selectedSource = context.sources[context.selectedPad] ? context.sources[context.selectedPad] : 'Empty';\n  var backgroundColor = context.isRecording ? Colors.red : Colors.blue;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"canvas\", {\n    id: \"waveformDisplay\",\n    ref: canvasRef,\n    style: {\n      backgroundColor: backgroundColor,\n      width: \"100%\",\n      height: \"9vh\",\n      position: \"absolute\",\n      left: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    draggable: false,\n    style: {\n      position: \"relative\",\n      top: 0,\n      margin: \"1vh 0vw\"\n    },\n    className: \"pad-name disable-text-select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, context.selectedPad + 1, \" : \", selectedSource.name));\n});","map":{"version":3,"sources":["/home/spiced/spiced/spiced-final-project/src/components/WaveformDisplay/WaveformDisplay.js"],"names":["React","useContext","useRef","useEffect","Context","Colors","context","canvasRef","draw","canvas","current","c","getContext","clearRect","width","height","sourceAvailable","sources","selectedPad","waveformData","data","step","Math","ceil","length","amp","fillStyle","white","i","min","max","j","datum","fillRect","selectedSource","backgroundColor","isRecording","red","blue","position","left","top","margin","name"],"mappings":"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","sourcesContent":["import React, {useContext, useRef, useEffect} from 'react';\nimport {Context} from '../../contexts/SamplerContext';\nimport Colors from '../../Config/ColorScheme';\n\nexport default () => {\n    const context = useContext(Context);\n    const canvasRef = useRef(null)\n    const draw = () => {\n        let canvas = canvasRef.current;\n        let c = canvas.getContext('2d');\n        c.clearRect(0, 0, canvas.width, canvas.height);\n        let sourceAvailable = context.sources[context.selectedPad];\n        if(!sourceAvailable || !sourceAvailable.waveformData) return;\n        let data = sourceAvailable.waveformData;\n        let step = Math.ceil(data.length / canvas.width);\n        let amp = canvas.height / 2;\n        c.fillStyle = Colors.white;\n        for(var i=0; i < canvas.width; i++){\n            var min = 1.0;\n            var max = -1.0;\n            for (var j=0; j<step; j++) {\n                var datum = data[(i*step)+j];\n                if (datum < min)\n                    min = datum;\n                if (datum > max)\n                    max = datum;\n            }\n            c.fillRect(i,(1+min)*amp,1,Math.max(1,(max-min)*amp));\n        }\n    }\n    useEffect(() => {\n            draw()\n    })\n    let selectedSource = context.sources[context.selectedPad] ? context.sources[context.selectedPad] : 'Empty'\n    let backgroundColor = context.isRecording ? Colors.red : Colors.blue;\n    return <div>\n            <canvas\n            id=\"waveformDisplay\"\n            ref={canvasRef}\n            style={{backgroundColor: backgroundColor, width: \"100%\", height: \"9vh\", position: \"absolute\", left: 0}}\n            />\n            <h4 draggable={false} style={{position: \"relative\", top: 0, margin: \"1vh 0vw\"}} className=\"pad-name disable-text-select\">{context.selectedPad + 1} : {selectedSource.name}</h4>\n        </div>\n}\n"]},"metadata":{},"sourceType":"module"}