{"ast":null,"code":"var _jsxFileName = \"/home/spiced/spiced/sampler2/Sampler/src/components/PadEditorItem/EditorItemRange.js\";\nimport React, { useContext } from 'react';\nimport { updateEditorData } from '../../actions';\nimport { Context } from '../../contexts/SamplerContext';\nimport Colors from '../../Config/ColorScheme';\nimport './PadEditorItem.css';\nvar style = {\n  background: Colors.gray,\n  color: Colors.white,\n  width: \"90%\",\n  textAlign: \"center\",\n  border: \"1px solid \".concat(Colors.white),\n  display: \"grid\",\n  gridTemplateRows: \"1fr 1fr\",\n  gridTemplateColumns: \"90%\",\n  justifyContent: \"center\",\n  margin: \"1vh auto\"\n};\nexport default (function (props) {\n  var context = useContext(Context);\n  return React.createElement(\"div\", {\n    className: \"pad-item-wrapper\",\n    style: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: props.label,\n    className: \"pad-item-label pad-text\",\n    style: {\n      width: \"100%\",\n      margin: \"auto\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, props.label.toUpperCase(), \": \", Math.floor(props.value * 100) / 100), React.createElement(\"input\", {\n    type: \"range\",\n    min: 0,\n    max: props.max,\n    value: props.value,\n    name: props.label,\n    step: props.step,\n    id: props.label,\n    onChange: function onChange(e) {\n      updateEditorData({\n        context: context,\n        cmd: props.label,\n        val: e.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["/home/spiced/spiced/sampler2/Sampler/src/components/PadEditorItem/EditorItemRange.js"],"names":["React","useContext","updateEditorData","Context","Colors","style","background","gray","color","white","width","textAlign","border","display","gridTemplateRows","gridTemplateColumns","justifyContent","margin","props","context","label","toUpperCase","Math","floor","value","max","step","e","cmd","val","target"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,gBAAR,QAA+B,eAA/B;AACA,SAAQC,OAAR,QAAsB,+BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAO,qBAAP;AAEA,IAAIC,KAAK,GAAG;AACRC,EAAAA,UAAU,EAAEF,MAAM,CAACG,IADX;AAERC,EAAAA,KAAK,EAAEJ,MAAM,CAACK,KAFN;AAGRC,EAAAA,KAAK,EAAE,KAHC;AAIRC,EAAAA,SAAS,EAAE,QAJH;AAKRC,EAAAA,MAAM,sBAAeR,MAAM,CAACK,KAAtB,CALE;AAMRI,EAAAA,OAAO,EAAE,MAND;AAORC,EAAAA,gBAAgB,EAAE,SAPV;AAQRC,EAAAA,mBAAmB,EAAE,KARb;AASRC,EAAAA,cAAc,EAAE,QATR;AAURC,EAAAA,MAAM,EAAE;AAVA,CAAZ;AAaA,gBAAe,UAACC,KAAD,EAAW;AACtB,MAAMC,OAAO,GAAGlB,UAAU,CAACE,OAAD,CAA1B;AACA,SACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAkC,IAAA,KAAK,EAAEE,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAEa,KAAK,CAACE,KAAtB;AACA,IAAA,SAAS,EAAC,yBADV;AAEA,IAAA,KAAK,EAAE;AAACV,MAAAA,KAAK,EAAE,MAAR;AAAgBO,MAAAA,MAAM,EAAC;AAAvB,KAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEwCC,KAAK,CAACE,KAAN,CAAYC,WAAZ,EAFxC,QAEqEC,IAAI,CAACC,KAAL,CAAWL,KAAK,CAACM,KAAN,GAAc,GAAzB,IAAgC,GAFrG,CADJ,EAII;AACA,IAAA,IAAI,EAAC,OADL;AAEA,IAAA,GAAG,EAAE,CAFL;AAGA,IAAA,GAAG,EAAEN,KAAK,CAACO,GAHX;AAIA,IAAA,KAAK,EAAEP,KAAK,CAACM,KAJb;AAKA,IAAA,IAAI,EAAEN,KAAK,CAACE,KALZ;AAMA,IAAA,IAAI,EAAEF,KAAK,CAACQ,IANZ;AAOA,IAAA,EAAE,EAAER,KAAK,CAACE,KAPV;AAQA,IAAA,QAAQ,EAAE,kBAACO,CAAD,EAAO;AAAEzB,MAAAA,gBAAgB,CAAC;AAACiB,QAAAA,OAAO,EAAPA,OAAD;AAAUS,QAAAA,GAAG,EAAEV,KAAK,CAACE,KAArB;AAA4BS,QAAAA,GAAG,EAAEF,CAAC,CAACG,MAAF,CAASN;AAA1C,OAAD,CAAhB;AAAmE,KARtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAgBH,CAlBD","sourcesContent":["import React, {useContext} from 'react';\nimport {updateEditorData} from '../../actions'\nimport {Context} from '../../contexts/SamplerContext';\nimport Colors from '../../Config/ColorScheme';\nimport './PadEditorItem.css';\n\nlet style = { \n    background: Colors.gray, \n    color: Colors.white, \n    width: \"90%\", \n    textAlign: \"center\",\n    border: `1px solid ${Colors.white}`,\n    display: \"grid\",\n    gridTemplateRows: \"1fr 1fr\",\n    gridTemplateColumns: \"90%\",\n    justifyContent: \"center\",\n    margin: \"1vh auto\",\n}\n\nexport default (props) => {\n    const context = useContext(Context)\n    return (\n        <div className=\"pad-item-wrapper\" style={style}>\n            <label htmlFor={props.label} \n            className=\"pad-item-label pad-text\" \n            style={{width: \"100%\", margin:\"auto\"}}>{props.label.toUpperCase()}: {Math.floor(props.value * 100) / 100}</label>\n            <input \n            type=\"range\" \n            min={0} \n            max={props.max} \n            value={props.value} \n            name={props.label} \n            step={props.step}\n            id={props.label}\n            onChange={(e) => { updateEditorData({context, cmd: props.label, val: e.target.value})}}/>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}